{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "OpenAI Completion Request JSON Schema",
  "description": "OpenAI Completion Request JSON Schema",
  "type": "object",
  "required": [
    "model",
    "messages"
  ],
  "properties": {
    "model": {
      "type": "string",
      "description": "ID of the OpenAI model to use"
    },
    "prompt": {
      "type": [
        "string",
        "array"
      ],
      "description": "The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays."
    },
    "suffix": {
      "type": "string",
      "description": "The suffix that comes after a completion of inserted text."
    },
    "max_tokens": {
      "type": "number",
      "description": "The maximum number of tokens to generate in the chat completion."
    },
    "temperature": {
      "type": "number",
      "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
      "default": 1
    },
    "top_p": {
      "type": "number",
      "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.",
      "default": 1.0
    },
    "n": {
      "type": "number",
      "description": "How many chat completion choices to generate for each input message.",
      "default": 1
    },
    "stream": {
      "type": "boolean",
      "description": "If set, partial message deltas will be sent, like in ChatGPT.",
      "default": false
    },
    "logprobs": {
      "type": "number",
      "description": "Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. For example, if logprobs is 5, the API will return a list of the 5 most likely tokens. The API will always return the logprob of the sampled token, so there may be up to logprobs+1 elements in the response.",
      "default": 5
    },
    "echo": {
      "type": "boolean",
      "description": "Echo back the prompt in addition to the completion",
      "default": false
    },
    "stop": {
      "type": "array",
      "description": "A list of tokens where the API will stop generating further tokens. The API will stop generating tokens at the first occurrence of any of these tokens. If none are specified, the API will use its default stop list.",
      "items": {
        "type": "string"
      }
    },
    "frequency_penalty": {
      "type": "number",
      "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
      "default": 0
    },
    "presence_penalty": {
      "type": "number",
      "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
      "default": 0
    },
    "logit_bias": {
      "type": "object",
      "description": "Modify the likelihood of specified tokens appearing in the completion."
    },
    "best_of": {
      "type": "number",
      "description": "Generates best_of completions server-side and returns the \"best\" (the one with the highest log probability per token). Results cannot be streamed.",
      "default": 1
    },
    "user": {
      "type": "string",
      "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. Learn more."
    }
  }
}